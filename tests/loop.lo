fn test_loop() {
   // loop { 
   //    println!("I live."); 
   // }
   
   'outer: loop {
      println!("Entered the outer loop");
      
      'inner: loop {
         println!("Entered the inner loop");
         break 'outer;
      }
      
      println!("This point will never be reached");
   }
   
   'a: loop {
      'a: loop {
         break 'a;
      }
      print!("outer loop");
      break 'a;
   }
}

fn test_assign() {
   let mut a = 1;
   let mut b = 1;
   
   let result = loop {
      if b > 10 {
         break b;
      }
   
      let c = a + b;
      a = b;
      b = c;
   };
   
   println!("{result}");
}

fn test_while() {
   let mut i = 0;
   while i < 10 {
      println!("ball(s) {i}"); 
      i += 1;
   }
   
   let x = [1, 2, 3, 4, 5];
   while let Some(y) = x.pop() {
      println!("y = {}", y);
   }
   
   while let _ = 5 {
      println!("irrefutable patterns are always true");
      break;
   }
}

fn test_for() {
   for i in 0..10 {
      println!("index: {i}");
   }
   
   let strs = ["cats", "dogs"];
   for text in strs {
      println!("I like {}.", text);
   }
   
   for i in 0..10 {
      if i % 2 == 0 {
         continue;
      }
      println!("{i}");
   }
}

fn main() {
   // test_loop();
   // test_assign();
   test_while();
   // test_for();
}