// enum Option<T> {
//    None,
//    Some(T),
// }

fn analyze_slice(slice: &[i32]) {
   io::print("First element of the slice: ");
   io::println(slice[0]);
    
   io::print("The slice has ");
   io::print(slice.len());
   io::println(" elements.");
}

fn main() {   
   let mut s: [i32] = [1, 2, 3];
   // let ys: [i32; 500] = [0; 500];
   let xs: [i32; 5] = [1, 2, 3, 4, 5];
   
   // s[2] = 10;
   
   analyze_slice(s);
   analyze_slice(xs);
   
   // match xs.get(10) {
   //    Option::Some(xval) => io::println(xval),
   //    Option::None => io::println("nope"),
   // }
}