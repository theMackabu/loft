fn main() {
   let success = Ok(42);
   let failure = Err("error message");
   let maybe = Some(123);
   let nothing = None;
   
   let result = match success {
      Ok(n) => n,
      Err(_) => -1,
   };
   
   let error_msg = match failure {
      Ok(_) => "success",
      Err(msg) => msg,
   };
   
   let opt_value = match maybe {
      Some(x) => x,
      None => 0,
   };
   
   let default = match nothing {
      Some(x) => x,
      None => 999,
   };
   
   println!("should print 42\n - result: {result}\n");
   println!("should print 'error message'\n - error_msg: {error_msg}\n");
   println!("should print 123\n - opt_value: {opt_value}\n");
   println!("should print 999\n - default: {default}\n");
   
   let value = 0;
   
   println!("should print 'zero'\n - value: {}", match value {
      0i32 => "zero",
      0u8 => "unsigned zero",
      1.0f32 => "one float",
      -1i64 => "negative one",
      -1.0f64 => "negative one float",
      n if n < 0 => "negative",
      _ => "positive"
   });
}