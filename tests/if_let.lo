enum Foo {
   Bar,
   Baz,
   Qux(u32)
}

fn test_enum() {
   let a = Foo::Bar;
   let b = Foo::Baz;
   let c = Foo::Qux(100);
   
   if let Foo::Bar = a {
      test_eq!(a, (Foo::Bar))
   }
    
   if let Foo::Bar = b {
      test_eq!(b, (Foo::Bar))
   }
    
   if let Foo::Qux(value) = c {
      test_eq!(value, 100)
   }
   
   if let Foo::Qux(value @ 100) = c {
      test_eq!(c.0, 100)
   }
}

fn test_opt() {
   let number = Some(7);
   let letter: Option<str> = None;
   let emoticon: Option<str> = None;
   let i_like_letters = false;
   
   if let Some(i) = number {
      test_eq!(i, 7)
   }
   
   if let Some(str) = letter {
      unreachable!()
   } else {
      test_eq!(letter, None)
   }
   
   if let Some(str) = emoticon {
      unreachable!()
   } else if i_like_letters {
      unreachable!()
   } else {
      test_eq!(emoticon, None)
   }
}

fn main() {
   test_enum();
   test_opt();
}